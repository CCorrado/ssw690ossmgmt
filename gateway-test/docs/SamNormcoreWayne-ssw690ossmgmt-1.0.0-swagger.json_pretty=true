{
  "swagger" : "2.0",
  "info" : {
    "description" : "This is an API for ssw690ossmgmt",
    "version" : "1.0.0",
    "title" : "Simple Login API",
    "contact" : {
      "email" : "zzhan26@stevens.edu"
    },
    "license" : {
      "name" : "Apache 2.0",
      "url" : "http://www.apache.org/licenses/LICENSE-2.0.html"
    }
  },
  "tags" : [ {
    "name" : "buyer",
    "description" : "Gateway for operations of buyers"
  }, {
    "name" : "business",
    "description" : "Gateway for operations of businesses"
  }, {
    "name" : "admins",
    "description" : "Operations available to administrators"
  } ],
  "paths" : {
    "/dev" : {
      "get" : {
        "tags" : [ "admins" ],
        "summary" : "searches inventory",
        "operationId" : "searchInventory",
        "description" : "By passing in the appropriate options, you can search for\navailable inventory in the system\n",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "query",
          "name" : "searchString",
          "description" : "pass an optional search string for looking up inventory",
          "required" : false,
          "type" : "string"
        }, {
          "in" : "query",
          "name" : "skip",
          "description" : "number of records to skip for pagination",
          "type" : "integer",
          "format" : "int32",
          "minimum" : 0
        }, {
          "in" : "query",
          "name" : "limit",
          "description" : "maximum number of records to return",
          "type" : "integer",
          "format" : "int32",
          "minimum" : 0,
          "maximum" : 50
        } ],
        "responses" : {
          "200" : {
            "description" : "search results matching criteria",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/UserInform"
              }
            }
          },
          "400" : {
            "description" : "bad input parameter"
          }
        }
      }
    },
    "/login" : {
      "post" : {
        "tags" : [ "buyer", "business" ],
        "summary" : "Users login",
        "operationId" : "User login",
        "description" : "Allow a user to login",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "loginInformation",
          "description" : "Inventory item to add",
          "schema" : {
            "$ref" : "#/definitions/Login"
          }
        } ],
        "responses" : {
          "201" : {
            "description" : "Login successfully"
          },
          "400" : {
            "description" : "invalid input, object invalid"
          },
          "409" : {
            "description" : "an existing item already exists"
          }
        }
      }
    },
    "/register/buyer" : {
      "post" : {
        "tags" : [ "buyer" ],
        "summary" : "Users registration",
        "operationId" : "addBuyer",
        "description" : "Adds an new user into system",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "registerInformation",
          "schema" : {
            "$ref" : "#/definitions/userRegister"
          }
        } ],
        "responses" : {
          "201" : {
            "description" : "User account created"
          },
          "400" : {
            "description" : "Invalid input, object invalid"
          }
        }
      }
    },
    "/register/business" : {
      "post" : {
        "tags" : [ "business" ],
        "summary" : "Users registration",
        "operationId" : "addBusiness",
        "description" : "Adds an new user into system",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "registerInformation",
          "schema" : {
            "$ref" : "#/definitions/bisRegister"
          }
        } ],
        "responses" : {
          "201" : {
            "description" : "User account created"
          },
          "400" : {
            "description" : "Invalid input, object invalid"
          }
        }
      }
    }
  },
  "definitions" : {
    "UserInform" : {
      "type" : "integer"
    },
    "Login" : {
      "type" : "object",
      "required" : [ "user_type", "username", "password" ],
      "properties" : {
        "user_type" : {
          "type" : "string",
          "enum" : [ "buyer", "business" ],
          "example" : "buyer"
        },
        "username" : {
          "type" : "string",
          "example" : "sampleuser"
        },
        "password" : {
          "type" : "string",
          "pattern" : "^(?=.*\\d)(?=.*[a-z])(?=.*[A-Z])[a-zA-Z0-9]{8,}$",
          "example" : "Caplower1234"
        }
      }
    },
    "userRegister" : {
      "type" : "object",
      "required" : [ "username", "name", "password", "email" ],
      "properties" : {
        "username" : {
          "type" : "string",
          "example" : "apitest"
        },
        "name" : {
          "type" : "string",
          "example" : "Api Test"
        },
        "password" : {
          "type" : "string",
          "pattern" : "^(?=.*\\d)(?=.*[a-z])(?=.*[A-Z])[a-zA-Z0-9]{8,}&",
          "example" : "Caplower1234"
        },
        "email" : {
          "type" : "string",
          "pattern" : "^[A-Za-z0-9\\u4e00-\\u9fa5]+@[a-zA-Z0-9_-]+(\\.[a-zA-Z0-9_-]+)+$",
          "example" : "test@test.com"
        }
      }
    },
    "bisRegister" : {
      "type" : "object",
      "required" : [ "username", "name", "password", "email", "storename" ],
      "properties" : {
        "username" : {
          "type" : "string",
          "example" : "businesstest"
        },
        "name" : {
          "type" : "string",
          "example" : "Business Test"
        },
        "password" : {
          "type" : "string",
          "pattern" : "(?=.*\\d)(?=.*[a-z])(?=.*[A-Z])[a-zA-Z0-9]{8,}&",
          "example" : "Caplower1234"
        },
        "email" : {
          "type" : "string",
          "pattern" : "^[A-Za-z0-9\\u4e00-\\u9fa5]+@[a-zA-Z0-9_-]+(\\.[a-zA-Z0-9_-]+)+$",
          "example" : "test@test.com"
        },
        "storename" : {
          "type" : "string",
          "example" : "this is a store"
        }
      }
    }
  },
  "host" : "virtserver.swaggerhub.com",
  "basePath" : "/SamNormcoreWayne/ssw690ossmgmt/1.0.0",
  "schemes" : [ "https" ]
}